{"version":3,"sources":["reportWebVitals.js","components/card.js","components/cardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","children","style","overflowY","border","height","ErrorBoundary","props","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4NAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,oCCSCQ,G,MAbJ,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,KAAKC,EAAY,EAAZA,MAAMC,EAAM,EAANA,GACvB,OACC,sBAAKC,UAAU,sDAAf,UACC,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BH,EAA1B,cACpB,gCACC,6BAAKF,IACL,4BAAIC,YCWOK,EAjBA,SAAC,GAAY,IAAXC,EAAU,EAAVA,OAChB,OACC,8BACIA,EAAOC,KAAI,SAACC,EAAKC,GAClB,OACC,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAMO,EAAOG,GAAGV,KAChBC,MAAOM,EAAOG,GAAGT,OAHZS,SCMGC,EAbC,SAAC,GAAkB,IAAjBC,EAAgB,EAAhBA,aACjB,OACC,qBAAKT,UAAU,MAAf,SACC,uBACAA,UAAU,mCACVU,KAAK,SACLC,YAAY,mBACZC,SAAUH,OCDEI,EAPF,SAAC,GAAc,IAAbC,EAAY,EAAZA,SACd,OACC,sBAAKC,MAAO,CAACC,UAAU,SAASC,OAAO,kBAAkBC,OAAO,SAAhE,UACEJ,EADF,QCmBaK,E,kDAnBd,WAAYC,GAAO,IAAD,8BACjB,cAAMA,IACDC,MAAM,CACVC,UAAS,GAHO,E,8DAOAC,EAAMC,GACvBC,KAAKC,SAAU,CAACJ,UAAS,K,+BAIzB,OAAGG,KAAKJ,MAAMC,SACN,wDAEDG,KAAKL,MAAMN,a,GAhBQa,aC4CbC,G,wDAtCd,aAAc,IAAD,8BACZ,gBAaDC,eAAe,SAACC,GACf,EAAKJ,SAAS,CAACK,YAAYD,EAAME,OAAOC,SAbxC,EAAKZ,MAAM,CACVjB,OAAO,GACP2B,YAAY,IAJD,E,gEAQO,IAAD,OAClBG,MAAM,8CAA8C5C,MAAK,SAAA6C,GACxD,OAAOA,EAASC,UACd9C,MAAK,SAAA+C,GAAQ,EAAKX,SAAS,CAACtB,OAAOiC,S,+BAO9B,IAAD,EACsBZ,KAAKJ,MAA3BjB,EADA,EACAA,OAAO2B,EADP,EACOA,YACRO,EAAelC,EAAOmC,QAAO,SAAAC,GAClC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAASX,EAAYU,kBAEtD,OAAQrC,EAAOuC,OAEd,sBAAK3C,UAAU,KAAf,UACC,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUzB,OAAQkC,WANtB,gD,GAzBgBX,cCAlBiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAM1B7D,M","file":"static/js/main.748e445a.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport '../card.css'\n\nconst Card=({name,email,id})=>{\n\treturn(\n\t\t<div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t<img alt='robot' src={`https://robohash.org/${id}?200x200`}/>\n\t\t\t<div>\n\t\t\t\t<h2>{name}</h2>\n\t\t\t\t<p>{email}</p>\n\t\t\t</div>\n\t\t</div>\n\t\t);\n\n}\n\nexport default Card;","import React from 'react';\nimport Card from './card';\n\nconst CardList=({robots})=>{\n\treturn(\n\t\t<div>\n\t\t   {robots.map((user,i)=>{\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<Card \n\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\t\tname={robots[i].name} \n\t\t\t\t\t\t\temail={robots[i].email}/>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t\t}\n  \t\t</div>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox=({searchChange})=>{\n\treturn(\n\t\t<div className='pa2'>\n\t\t\t<input \n\t\t\tclassName='pa3 ba b--green bg-lightest-blue'\n\t\t\ttype='search' \n\t\t\tplaceholder='search robots...' \n\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t\t);\n}\n\nexport default SearchBox;","import React from 'react';\nconst Scroll=({children})=>{\n\treturn (\n\t\t<div style={{overflowY:'scroll',border:'5px solid black',height:'800px'}}>\n\t\t\t{children};\n\t\t</div>\n\t\t);\n};\nexport default Scroll;","import React,{Component} from 'react';\n\nclass ErrorBoundary extends Component {\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.state={\n\t\t\thasError:false\n\t\t}\n\t}\n\n\tcomponentDidCatch(error,info){\n\t\tthis.setState=({hasError:true})\n\t}\n\n\trender(){\n\t\tif(this.state.hasError){\n\t\t\treturn <h1>oops...that's not good</h1> \n\t\t}\n\t\treturn this.props.children;\n\t}\n}\n\nexport default ErrorBoundary;","import React,{Component} from 'react';\nimport CardList from '../components/cardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport './App.css';\n\nclass App extends Component {\n\tconstructor(){\n\t\tsuper();\n\t\tthis.state={\n\t\t\trobots:[],\n\t\t\tsearchfield:''\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users').then(response=>{\n\t\t\treturn response.json();\n\t\t}).then(users=>{this.setState({robots:users})})\n\t}\n\n\tonSearchChange=(event)=>{\n\t\tthis.setState({searchfield:event.target.value});\n\t}\n\n\trender(){\n\t\tconst {robots,searchfield} = this.state;\n\t\tconst filteredRobots=robots.filter(robot=>{\n\t\t\treturn robot.name.toLowerCase().includes(searchfield.toLowerCase());\n\t\t});\n\t\treturn !robots.length ?\n\t\t<h1>loading...</h1>:\n\t\t(<div className='tc'>\n\t\t\t\t<h1 className='f1'>RoboFriends</h1>\n\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\n\t\t\t\t<Scroll>\n\t\t\t\t\t<ErrorBoundary>\n\t\t\t\t\t\t<CardList robots={filteredRobots}/>\n\t\t\t\t\t</ErrorBoundary>\n\t\t\t\t</Scroll>\n\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\nimport App from './containers/App';\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}